/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spk_siswa_prestasi;

import static java.awt.Frame.MAXIMIZED_BOTH;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.io.InputStream;
import java.sql.Connection;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import koneksi.koneksi;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Yoga Eka Pratama
 */
public class Menu_Utama extends javax.swing.JFrame {

    private String userLevel; // User level (Admin, Tata_Usaha, Guru)

    // Constructor
    public Menu_Utama(String userLevel) {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_HORIZ);
        setVisible(true);
        setResizable(false);
        Locale.setDefault(new Locale("id", "ID"));
        this.userLevel = userLevel;

        // Check user level and disable/enable components accordingly
        configureAccess();
    }

    // Method to configure access based on user level
    private void configureAccess() {
        if (userLevel.equals("Admin")) {
            // Enable all components for Admin
            enableAllComponents();
        } else if (userLevel.equals("Tata_Usaha")) {
            // Disable components not accessible by Tata_Usaha
        btnbobotan.setEnabled(false);
        btnhitung.setEnabled(true);
        datakriteria.setEnabled(true);
        databobot.setEnabled(true);
        dataperhitungan.setEnabled(true);
        dataadmin.setEnabled(false);
        datasiswa.setEnabled(false);
        logout.setEnabled(true);
        laporanadmin.setEnabled(true);
        laporanbobot.setEnabled(true);
        laporankriteria.setEnabled(true);
        laporanpembobotan.setEnabled(true);
        laporanperhitungan.setEnabled(true);
        laporansiswa.setEnabled(true);
        btnexit.setEnabled(true);
        } else if (userLevel.equals("Guru")) {
            // Disable components not accessible by Guru
        btnbobotan.setEnabled(true);
        btnhitung.setEnabled(false);
        datakriteria.setEnabled(false);
        databobot.setEnabled(false);
        dataperhitungan.setEnabled(false);
        dataadmin.setEnabled(false);
        datasiswa.setEnabled(true);
        logout.setEnabled(true);
        laporanadmin.setEnabled(false);
        laporanbobot.setEnabled(false);
        laporankriteria.setEnabled(false);
        laporanpembobotan.setEnabled(true);
        laporanperhitungan.setEnabled(true);
        laporansiswa.setEnabled(true);
        btnexit.setEnabled(true);
        }
    }

    // Method to enable all components
    private void enableAllComponents() {
        btnbobotan.setEnabled(true);
        btnhitung.setEnabled(true);
        datakriteria.setEnabled(true);
        databobot.setEnabled(true);
        dataperhitungan.setEnabled(true);
        dataadmin.setEnabled(true);
        datasiswa.setEnabled(true);
        logout.setEnabled(true);
        laporanadmin.setEnabled(true);
        laporanbobot.setEnabled(true);
        laporankriteria.setEnabled(true);
        laporanpembobotan.setEnabled(true);
        laporanperhitungan.setEnabled(true);
        laporansiswa.setEnabled(true);
        btnexit.setEnabled(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bodyPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnexit = new javax.swing.JButton();
        btnbobotan = new javax.swing.JButton();
        btnhitung = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        logout = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        dataadmin = new javax.swing.JMenuItem();
        datasiswa = new javax.swing.JMenuItem();
        datakriteria = new javax.swing.JMenuItem();
        databobot = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        datapembobotan = new javax.swing.JMenuItem();
        dataperhitungan = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        laporanadmin = new javax.swing.JMenuItem();
        laporanbobot = new javax.swing.JMenuItem();
        laporankriteria = new javax.swing.JMenuItem();
        laporanpembobotan = new javax.swing.JMenuItem();
        laporanperhitungan = new javax.swing.JMenuItem();
        laporansiswa = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SMK PGRI 20 JAKARTA");

        bodyPanel.setBackground(new java.awt.Color(26, 188, 156));
        bodyPanel.setPreferredSize(new java.awt.Dimension(829, 413));
        bodyPanel.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Login.png"))); // NOI18N
        jLabel1.setText(" ");
        bodyPanel.add(jLabel1);
        jLabel1.setBounds(20, 20, 212, 184);

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Disusun Oleh :");
        bodyPanel.add(jLabel4);
        jLabel4.setBounds(90, 200, 84, 16);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("YOGA EKA PRATAMA");
        bodyPanel.add(jLabel5);
        jLabel5.setBounds(70, 230, 120, 16);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("20194501753");
        bodyPanel.add(jLabel6);
        jLabel6.setBounds(90, 260, 77, 16);

        btnexit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout.png"))); // NOI18N
        btnexit.setText("Exit");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });
        bodyPanel.add(btnexit);
        btnexit.setBounds(60, 320, 123, 35);

        btnbobotan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnbobotan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/PEMBOBOTAN.png"))); // NOI18N
        btnbobotan.setText("PEMBOBOTAN DATA");
        btnbobotan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbobotanActionPerformed(evt);
            }
        });
        bodyPanel.add(btnbobotan);
        btnbobotan.setBounds(760, 360, 180, 40);

        btnhitung.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnhitung.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/analisa.png"))); // NOI18N
        btnhitung.setText("PERHITUNGAN DATA");
        btnhitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhitungActionPerformed(evt);
            }
        });
        bodyPanel.add(btnhitung);
        btnhitung.setBounds(760, 290, 180, 40);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Castellar", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("SISTEM PENDUKUNG KEPUTUSAN");
        bodyPanel.add(jLabel2);
        jLabel2.setBounds(200, 60, 600, 61);

        jLabel3.setFont(new java.awt.Font("Castellar", 1, 28)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("MENGGUNAKAN TOPSIS");
        bodyPanel.add(jLabel3);
        jLabel3.setBounds(310, 130, 404, 74);

        jLabel7.setFont(new java.awt.Font("Castellar", 1, 28)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("pemilihan SISWA berprestasi");
        bodyPanel.add(jLabel7);
        jLabel7.setBounds(200, 90, 600, 74);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon("E:\\Yoga\\Tugas Kuliah\\SKRIPSI\\MAIN\\apk skripsi\\PIC\\LOGIN2.png")); // NOI18N
        bodyPanel.add(jLabel8);
        jLabel8.setBounds(800, 40, 150, 130);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/rsz_background (1).jpg"))); // NOI18N
        jLabel9.setOpaque(true);
        jLabel9.setPreferredSize(new java.awt.Dimension(859, 493));
        bodyPanel.add(jLabel9);
        jLabel9.setBounds(0, 0, 1050, 570);

        jMenu1.setText("Akun");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jMenu1.add(logout);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Master");

        dataadmin.setText("Pegawai");
        dataadmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataadminActionPerformed(evt);
            }
        });
        jMenu2.add(dataadmin);

        datasiswa.setText("Siswa");
        datasiswa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datasiswaActionPerformed(evt);
            }
        });
        jMenu2.add(datasiswa);

        datakriteria.setText("Kriteria");
        datakriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datakriteriaActionPerformed(evt);
            }
        });
        jMenu2.add(datakriteria);

        databobot.setText("Bobot");
        databobot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                databobotActionPerformed(evt);
            }
        });
        jMenu2.add(databobot);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Hitung");

        datapembobotan.setText("Pembobotan");
        datapembobotan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datapembobotanActionPerformed(evt);
            }
        });
        jMenu3.add(datapembobotan);

        dataperhitungan.setText("Perhitungan");
        dataperhitungan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataperhitunganActionPerformed(evt);
            }
        });
        jMenu3.add(dataperhitungan);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Cetak Laporan");

        laporanadmin.setText("Laporan Admin");
        laporanadmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laporanadminActionPerformed(evt);
            }
        });
        jMenu4.add(laporanadmin);

        laporanbobot.setText("Laporan Bobot");
        laporanbobot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laporanbobotActionPerformed(evt);
            }
        });
        jMenu4.add(laporanbobot);

        laporankriteria.setText("Laporan Kriteria");
        laporankriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laporankriteriaActionPerformed(evt);
            }
        });
        jMenu4.add(laporankriteria);

        laporanpembobotan.setText("Laporan Pembobotan");
        laporanpembobotan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laporanpembobotanActionPerformed(evt);
            }
        });
        jMenu4.add(laporanpembobotan);

        laporanperhitungan.setText("Laporan Perhitungan");
        laporanperhitungan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laporanperhitunganActionPerformed(evt);
            }
        });
        jMenu4.add(laporanperhitungan);

        laporansiswa.setText("Laporan Siswa");
        laporansiswa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laporansiswaActionPerformed(evt);
            }
        });
        jMenu4.add(laporansiswa);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1003, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnhitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhitungActionPerformed
        if (userLevel.equals("Admin") || userLevel.equals("Tata_Usaha")) {
            new AnalisaData().setVisible(true);
        } else {
            // Show an error message for unauthorized access
            JOptionPane.showMessageDialog(this, "Akses Ditolak",
                    "Access Denied", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnhitungActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
       System.exit(0);
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnbobotanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbobotanActionPerformed
        new pembobotan().setVisible(true);
    }//GEN-LAST:event_btnbobotanActionPerformed

    private void dataadminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataadminActionPerformed
        // TODO add your handling code here:
        data_admin dataadmin = new data_admin();
        dataadmin.setVisible(true);
    }//GEN-LAST:event_dataadminActionPerformed

    private void datasiswaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datasiswaActionPerformed
        // TODO add your handling code here:
        data_siswa datasiswa = new data_siswa();
        datasiswa.setVisible(true);
    }//GEN-LAST:event_datasiswaActionPerformed

    private void datakriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datakriteriaActionPerformed
        // TODO add your handling code here:
        data_kriteria datakriteria = new data_kriteria();
        datakriteria.setVisible(true);
    }//GEN-LAST:event_datakriteriaActionPerformed

    private void databobotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_databobotActionPerformed
        // TODO add your handling code here:
        data_bobot databobot = new data_bobot();
        databobot.setVisible(true);
    }//GEN-LAST:event_databobotActionPerformed

    private void datapembobotanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datapembobotanActionPerformed
        // TODO add your handling code here:
        pembobotan pembobot = new pembobotan();
        pembobot.setVisible(true);
    }//GEN-LAST:event_datapembobotanActionPerformed

    private void dataperhitunganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataperhitunganActionPerformed
        // TODO add your handling code here:
        AnalisaData analisadata = new AnalisaData();
        analisadata.setVisible(true);
    }//GEN-LAST:event_dataperhitunganActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void laporanbobotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laporanbobotActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Mohon ditunggu", "Information", JOptionPane.INFORMATION_MESSAGE);
    Connection conn = new koneksi().getConnection();
    JasperReport jasperReport;
    JasperPrint jasperPrint;

    try {
        String jrxmlFilePath = "/report/databobot.jrxml";
        InputStream reportStream = getClass().getResourceAsStream(jrxmlFilePath);
        jasperReport = JasperCompileManager.compileReport(reportStream);
        InputStream imageStream1 = getClass().getResourceAsStream("/icon/Logo1.png");
        InputStream imageStream2 = getClass().getResourceAsStream("/icon/Login1.png");
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("ImageParam1", imageStream1);
        parameters.put("ImageParam2", imageStream2);
        jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);
        JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
        jasperViewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jasperViewer.setAlwaysOnTop(true);
        jasperViewer.setVisible(true);
        jasperViewer.setExtendedState(MAXIMIZED_BOTH);
    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_laporanbobotActionPerformed

    private void laporanadminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laporanadminActionPerformed
    JOptionPane.showMessageDialog(rootPane, "Mohon ditunggu", "Information", JOptionPane.INFORMATION_MESSAGE);
    Connection conn = new koneksi().getConnection();
    JasperReport jasperReport;
    JasperPrint jasperPrint;

    try {
        String jrxmlFilePath = "/report/datadmin.jrxml";
        InputStream reportStream = getClass().getResourceAsStream(jrxmlFilePath);
        jasperReport = JasperCompileManager.compileReport(reportStream);
        InputStream imageStream1 = getClass().getResourceAsStream("/icon/Logo1.png");
        InputStream imageStream2 = getClass().getResourceAsStream("/icon/Login1.png");
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("ImageParam1", imageStream1);
        parameters.put("ImageParam2", imageStream2);
        jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);
        JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
        jasperViewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jasperViewer.setAlwaysOnTop(true);
        jasperViewer.setVisible(true);
        jasperViewer.setExtendedState(MAXIMIZED_BOTH);
    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_laporanadminActionPerformed

    private void laporankriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laporankriteriaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Mohon ditunggu", "Information", JOptionPane.INFORMATION_MESSAGE);
    Connection conn = new koneksi().getConnection();
    JasperReport jasperReport;
    JasperPrint jasperPrint;

    try {
        String jrxmlFilePath = "/report/datakriteria.jrxml";
        InputStream reportStream = getClass().getResourceAsStream(jrxmlFilePath);
        jasperReport = JasperCompileManager.compileReport(reportStream);
        InputStream imageStream1 = getClass().getResourceAsStream("/icon/Logo1.png");
        InputStream imageStream2 = getClass().getResourceAsStream("/icon/Login1.png");
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("ImageParam1", imageStream1);
        parameters.put("ImageParam2", imageStream2);
        jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);
        JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
        jasperViewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jasperViewer.setAlwaysOnTop(true);
        jasperViewer.setVisible(true);
        jasperViewer.setExtendedState(MAXIMIZED_BOTH);
    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_laporankriteriaActionPerformed

    private void laporanpembobotanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laporanpembobotanActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Mohon ditunggu", "Information", JOptionPane.INFORMATION_MESSAGE);
    Connection conn = new koneksi().getConnection();
    JasperReport jasperReport;
    JasperPrint jasperPrint;

    try {
        String jrxmlFilePath = "/report/datapembobotan.jrxml";
        InputStream reportStream = getClass().getResourceAsStream(jrxmlFilePath);
        jasperReport = JasperCompileManager.compileReport(reportStream);
        InputStream imageStream1 = getClass().getResourceAsStream("/icon/Logo1.png");
        InputStream imageStream2 = getClass().getResourceAsStream("/icon/Login1.png");
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("ImageParam1", imageStream1);
        parameters.put("ImageParam2", imageStream2);
        jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);
        JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
        jasperViewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jasperViewer.setAlwaysOnTop(true);
        jasperViewer.setVisible(true);
        jasperViewer.setExtendedState(MAXIMIZED_BOTH);
    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_laporanpembobotanActionPerformed

    private void laporanperhitunganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laporanperhitunganActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Mohon ditunggu", "Information", JOptionPane.INFORMATION_MESSAGE);
    Connection conn = new koneksi().getConnection();
    JasperReport jasperReport;
    JasperPrint jasperPrint;

    try {
        String jrxmlFilePath = "/report/datarangking.jrxml";
        InputStream reportStream = getClass().getResourceAsStream(jrxmlFilePath);
        jasperReport = JasperCompileManager.compileReport(reportStream);
        InputStream imageStream1 = getClass().getResourceAsStream("/icon/Logo1.png");
        InputStream imageStream2 = getClass().getResourceAsStream("/icon/Login1.png");
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("ImageParam1", imageStream1);
        parameters.put("ImageParam2", imageStream2);
        jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);
        JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
        jasperViewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jasperViewer.setAlwaysOnTop(true);
        jasperViewer.setVisible(true);
        jasperViewer.setExtendedState(MAXIMIZED_BOTH);
    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_laporanperhitunganActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        int pesan=JOptionPane.showConfirmDialog(null, "Yakin Ingin Keluar?","",JOptionPane.YES_NO_OPTION
            ,JOptionPane.QUESTION_MESSAGE);
        if(pesan==JOptionPane.YES_OPTION){

            this.dispose();
            Login fm = new Login();
            fm.setVisible(true);
        }
    }//GEN-LAST:event_logoutActionPerformed

    private void laporansiswaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laporansiswaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Mohon ditunggu", "Information", JOptionPane.INFORMATION_MESSAGE);
    Connection conn = new koneksi().getConnection();
    JasperReport jasperReport;
    JasperPrint jasperPrint;

    try {
        String jrxmlFilePath = "/report/datasiswa.jrxml";
        InputStream reportStream = getClass().getResourceAsStream(jrxmlFilePath);
        jasperReport = JasperCompileManager.compileReport(reportStream);
        InputStream imageStream1 = getClass().getResourceAsStream("/icon/Logo1.png");
        InputStream imageStream2 = getClass().getResourceAsStream("/icon/Login1.png");
        Map<String, Object> parameters = new HashMap<>();
        parameters.put("ImageParam1", imageStream1);
        parameters.put("ImageParam2", imageStream2);
        jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);
        JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);
        jasperViewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jasperViewer.setAlwaysOnTop(true);
        jasperViewer.setVisible(true);
        jasperViewer.setExtendedState(MAXIMIZED_BOTH);
    } catch (Exception e) {
        System.out.println("Error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_laporansiswaActionPerformed

    public static void main(String args[]) {
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }

    // Create an instance of Menu_Utama and pass the userLevel parameter
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new Menu_Utama("Admin").setVisible(true); // Replace "Admin" with the appropriate user level
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JButton btnbobotan;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnhitung;
    private javax.swing.JMenuItem dataadmin;
    private javax.swing.JMenuItem databobot;
    private javax.swing.JMenuItem datakriteria;
    private javax.swing.JMenuItem datapembobotan;
    private javax.swing.JMenuItem dataperhitungan;
    private javax.swing.JMenuItem datasiswa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem laporanadmin;
    private javax.swing.JMenuItem laporanbobot;
    private javax.swing.JMenuItem laporankriteria;
    private javax.swing.JMenuItem laporanpembobotan;
    private javax.swing.JMenuItem laporanperhitungan;
    private javax.swing.JMenuItem laporansiswa;
    private javax.swing.JMenuItem logout;
    // End of variables declaration//GEN-END:variables
}
